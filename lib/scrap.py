from lib.colors import bcolors
import threading
import time

SOURCES = {
    1: "https://nvd.nist.gov/vuln/detail/CVE-XXXX-XXXX",
    2: "https://www.exploit-db.com/search?cve=XXXX-XXXX",
    3: "https://www.cve.org/CVERecord?id=CVE-XXXX-XXXX",
    4: "https://vulners.com/cve/CVE-XXXX-XXXX",
    5: "https://vulmon.com/vulnerabilitydetails?qid=CVE-XXXX-XXXX",
}

is_active = True

def wheel_scrap(source):
    print(f"{bcolors.FG_YELLOW}[│] Scrapping from {source}...", end="")
    while is_active:
        for _ in ["/", "─", "\\", "│"]:
            print(f"\r[{_}] Scrapping from {source}...", end="")
            time.sleep(0.1)
    print(f"\r{bcolors.FG_GREEN}[+] Scrapping from {source} FINISHED!{bcolors.END}")

def nist():
    # scrap from nist
    time.sleep(3)
    # print("You got me NIST")
    pass

def exploitdb():
    # scrap from exploit db
    time.sleep(3)
    # print("You got me EXPLOIT DB")
    pass

def mitre():
    # scrap from mitre
    time.sleep(3)
    # print("You got me MITRE")
    pass

def vulners():
    # scrap from vulners
    time.sleep(3)
    # print("You got me VULNERS")
    pass

def vulmon():
    # scrap from vulmon
    time.sleep(10)
    # print("You got me VULMON")
    pass

def scrap(source, function):
    global is_active
    t1 = threading.Thread(target=function)
    t2 = threading.Thread(target=wheel_scrap,args=(source,))
    t1.start()
    t2.start()
    time.sleep(2)
    while t1.is_alive():
        pass
    is_active = False
    t2.join()
    is_active = True

def merge(arr):
    result = {}
    for source_result in arr:
        for k,v in source_result.items():
            result[k] = v
    return result