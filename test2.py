# from reportlab.pdfgen import canvas
# canvas.setFont("Monoscope", 32, leading = None)
# c = canvas.Canvas("hello.pdf")
# c.drawString(100,100,"Hello Worldfhosghdfuhg uidfh guifdh iughdf uigdfg hdfiuhg dfuihg idufsg iuhgiu dsfhg dfguidfh giu h")
# c.showPage()
# c.save()



from reportlab.lib.styles import getSampleStyleSheet
from reportlab.platypus import SimpleDocTemplate
from reportlab.platypus import Paragraph
from reportlab.platypus import PageBreak
from reportlab.platypus import Table
from reportlab.lib import colors
import requests
import re

result = {
    "nist": {
        "ref_list": [
            {
                "hyperlink": "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-0144",
                "resource": [
                    "Vendor Advisory"
                ]
            },
            {
                "hyperlink": "http://packetstormsecurity.com/files/154690/DOUBLEPULSAR-Payload-Execution-Neutralization.html",
                "resource": []
            },
            {
                "hyperlink": "http://packetstormsecurity.com/files/156196/SMB-DOUBLEPULSAR-Remote-Code-Execution.html",
                "resource": []
            },
            {
                "hyperlink": "http://www.securityfocus.com/bid/96704",
                "resource": []
            },
            {
                "hyperlink": "http://www.securitytracker.com/id/1037991",
                "resource": []
            },
            {
                "hyperlink": "https://cert-portal.siemens.com/productcert/pdf/ssa-701903.pdf",
                "resource": []
            },
            {
                "hyperlink": "https://cert-portal.siemens.com/productcert/pdf/ssa-966341.pdf",
                "resource": []
            },
            {
                "hyperlink": "https://ics-cert.us-cert.gov/advisories/ICSMA-18-058-02",
                "resource": []
            },
            {
                "hyperlink": "https://www.exploit-db.com/exploits/41891/",
                "resource": []
            },
            {
                "hyperlink": "https://www.exploit-db.com/exploits/41987/",
                "resource": []
            },
            {
                "hyperlink": "https://www.exploit-db.com/exploits/42030/",
                "resource": []
            },
            {
                "hyperlink": "https://www.exploit-db.com/exploits/42031/",
                "resource": []
            }
        ],
        "weak_enum_list": [
            {
                "cwe_id": "CWE-20",
                "cwe_name": "Improper Input Validation",
                "cwe_source": "NIST"
            }
        ],
        "known_vul": {
            "name": "Microsoft SMBv1 Remote Code Execution Vulnerability",
            "data_add": "02/10/2022",
            "due_date": "08/10/2022",
            "action": "Apply updates per vendor instructions."
        },
        "vector": "CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H",
        "description": "The SMBv1 server in Microsoft Windows Vista SP2; Windows Server 2008 SP2 and R2 SP1; Windows 7 SP1; Windows 8.1; Windows Server 2012 Gold and R2; Windows RT 8.1; and Windows 10 Gold, 1511, and 1607; and Windows Server 2016 allows remote attackers to execute arbitrary code via crafted packets, aka \"Windows SMB Remote Code Execution Vulnerability.\" This vulnerability is different from those described in CVE-2017-0143, CVE-2017-0145, CVE-2017-0146, and CVE-2017-0148.",
        "base_score": " 8.1 HIGH\n"
    },
    "mitre": {
        "description": "The SMBv1 server in Microsoft Windows Vista SP2; Windows Server 2008 SP2 and R2 SP1; Windows 7 SP1; Windows 8.1; Windows Server 2012 Gold and R2; Windows RT 8.1; and Windows 10 Gold, 1511, and 1607; and Windows Server 2016 allows remote attackers to execute arbitrary code via crafted packets, aka \"Windows SMB Remote Code Execution Vulnerability.\" This vulnerability is different from those described in CVE-2017-0143, CVE-2017-0145, CVE-2017-0146, and CVE-2017-0148.\n\n",
        "assigning_cna": "Microsoft Corporation",
        "date_created": "20160909",
        "references": "\n\nBID:96704\nURL:http://www.securityfocus.com/bid/96704\nCONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-701903.pdf\nCONFIRM:https://cert-portal.siemens.com/productcert/pdf/ssa-966341.pdf\nCONFIRM:https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-0144\nEXPLOIT-DB:41891\nURL:https://www.exploit-db.com/exploits/41891/\nEXPLOIT-DB:41987\nURL:https://www.exploit-db.com/exploits/41987/\nEXPLOIT-DB:42030\nURL:https://www.exploit-db.com/exploits/42030/\nEXPLOIT-DB:42031\nURL:https://www.exploit-db.com/exploits/42031/\nMISC:http://packetstormsecurity.com/files/154690/DOUBLEPULSAR-Payload-Execution-Neutralization.html\nMISC:http://packetstormsecurity.com/files/156196/SMB-DOUBLEPULSAR-Remote-Code-Execution.html\nMISC:https://ics-cert.us-cert.gov/advisories/ICSMA-18-058-02\nSECTRACK:1037991\nURL:http://www.securitytracker.com/id/1037991\n\n"
    },
    "vulmon": {
        "degree": "8.1",
        "overview": "CVE-2017-0144\nPublished: 17/03/2017 Updated: 21/06/2018\nCVSS v2 Base Score: 9.3 | Impact Score: 10 | Exploitability Score: 8.6\nCVSS v3 Base Score: 8.1 | Impact Score: 5.9 | Exploitability Score: 2.2\nVMScore: 974\nVector: AV:N/AC:M/Au:N/C:C/I:C/A:C\n",
        "description": "The SMBv1 server in Microsoft Windows Vista SP2; Windows Server 2008 SP2 and R2 SP1; Windows 7 SP1; Windows 8.1; Windows Server 2012 Gold and R2; Windows RT 8.1; and Windows 10 Gold, 1511, and 1607; and Windows Server 2016 allows remote malicious users to execute arbitrary code via crafted packets, aka \"Windows SMB Remote Code Execution Vulnerability.\" This vulnerability is different from those described in CVE-2017-0143, CVE-2017-0145, CVE-2017-0146, and CVE-2017-0148.",
        "vulnerable_products": [
            "microsoft server_message_block 1.0"
        ],
        "vendor_advisories": None,
        "ics_advisories": None,
        "exploits": [
            {
                "name": "Exploit DB: Microsoft Windows Windows 7/8.1/2008 R2/2012 R2/2016 R2 - 'EternalBlue' SMB Remote Code Execution (MS17-010)",
                "url": "https://vulmon.com/exploitdetails?qidtp=exploitdb&qid=42315"
            },
            {
                "name": "Exploit DB: Microsoft Windows Windows 8/8.1/2012 R2 (x64) - 'EternalBlue' SMB Remote Code Execution (MS17-010)",
                "url": "https://vulmon.com/exploitdetails?qidtp=exploitdb&qid=42030"
            },
            {
                "name": "Exploit DB: Microsoft Windows Windows 7/2008 R2 - 'EternalBlue' SMB Remote Code Execution (MS17-010)",
                "url": "https://vulmon.com/exploitdetails?qidtp=exploitdb&qid=42031"
            },
            {
                "name": "Exploit DB: Microsoft Windows - SMB Remote Code Execution Scanner (MS17-010) (Metasploit)",
                "url": "https://vulmon.com/exploitdetails?qidtp=exploitdb&qid=41891"
            },
            {
                "name": "Exploit DB: DOUBLEPULSAR - Payload Execution and Neutralization (Metasploit)",
                "url": "https://vulmon.com/exploitdetails?qidtp=exploitdb&qid=47456"
            },
            {
                "name": "Exploit DB: Microsoft Windows Server 2008 R2 (x64) - 'SrvOs2FeaToNt' SMB Remote Code Execution (MS17-010)",
                "url": "https://vulmon.com/exploitdetails?qidtp=exploitdb&qid=41987"
            }
        ],
        "mailing_list": None,
        "github_repos": [
            "https://github.com/ShuBhamg0sain/All_top_500_hacking_tool",
            "https://github.com/haginara/msrc-python",
            "https://github.com/QWERTSKIHACK/awesome-termux-hacking",
            "https://github.com/himera25/termux-hacking",
            "https://github.com/kdcloverkid/https-github.com-kdcloverkid-awesome-termux-hacking",
            "https://github.com/shubhamg0sai/All_top_500_hacking_tool",
            "https://github.com/SaintsConnor/Exploits",
            "https://github.com/warecrer/eternal_scanner",
            "https://github.com/LinuxUser255/Python_Pen",
            "https://github.com/LinuxUser255/Python_Penetration_Testing",
            "https://github.com/himera25/hacking-tools-2023",
            "https://github.com/CodeWithSurya/-awesome-termux-hacking",
            "https://github.com/ShubhamGuptaIN/WannaCry-ransomware-attack-Virus",
            "https://github.com/skeeperloyaltie/network",
            "https://github.com/starlingvibes/TryHackMe",
            "https://github.com/quynhold/DetectCVE20170144Attack",
            "https://github.com/skhjacksonheights/bestTermuxTools_skh",
            "https://github.com/warecrer/escan",
            "https://github.com/AbbarhSF/Termux-Nation-2022-Alpha",
            "https://github.com/aseams/Pentest-Toolkit",
            "https://github.com/shubhamggosai/termux_All_hacking_tool",
            "https://github.com/Monsterlallu/Cyber-Kunjaali",
            "https://github.com/LinuxUser255/RedTeam_Python",
            "https://github.com/EEsshq/CVE-2017-0144---EtneralBlue-MS17-010-Remote-Code-Execution",
            "https://github.com/ShubhamGuptaIN/WannaCry-ransomware-attack-Virus-",
            "https://github.com/nlarot/nlarot",
            "https://github.com/linghaomeng/YBYB-590-capstone",
            "https://github.com/RedYetiDev/RedYetiDev",
            "https://github.com/quynhold/Detect-CVE-2017-0144-attack",
            "https://github.com/Zack-911/CVE-2017-0144---EtneralBlue-MS17-010-Remote-Code-Execution",
            "https://github.com/wuvel/TryHackMe",
            "https://github.com/peterpt/eternal_scanner",
            "https://github.com/sworatz/toolx500",
            "https://github.com/GoDsUnReAL/fun",
            "https://github.com/Monsterlallu/Top-500-hacking-tools",
            "https://github.com/JeffEmrys/termux-",
            "https://github.com/may215/awesome-termux-hacking",
            "https://github.com/rvsvishnuv/rvsvishnuv.github.io",
            "https://github.com/d4redevilx/eJPTv2-notes",
            "https://github.com/franciscogneto/Windows-2016-Server-Remote-Code-Execution-MS17-010",
            "https://github.com/Monsterlallu/Agori-Baba",
            "https://github.com/Itz-Ayanokoji/All-in-one-termux-tools",
            "https://github.com/yzk0b/TERMUX-RD",
            "https://github.com/ShuBhamg0sain/termux_All_hacking_tool",
            "https://github.com/c0mrade12211/Pentests",
            "https://github.com/MarikalAbhijeet/PentestReport",
            "https://github.com/naufalazhar65/ETHICAL-HACKING-DOCS"
        ],
        "references": [
            "https://cwe.mitre.org/data/definitions/20.html",
            "https://portal.msrc.microsoft.com/en-US/security-guidance/advisory/CVE-2017-0144",
            "http://www.securityfocus.com/bid/96704",
            "http://www.securitytracker.com/id/1037991",
            "https://www.exploit-db.com/exploits/42031/",
            "https://www.exploit-db.com/exploits/42030/",
            "https://www.exploit-db.com/exploits/41987/",
            "https://www.exploit-db.com/exploits/41891/",
            "https://ics-cert.us-cert.gov/advisories/ICSMA-18-058-02",
            "https://cert-portal.siemens.com/productcert/pdf/ssa-701903.pdf",
            "https://cert-portal.siemens.com/productcert/pdf/ssa-966341.pdf",
            "http://packetstormsecurity.com/files/154690/DOUBLEPULSAR-Payload-Execution-Neutralization.html",
            "http://packetstormsecurity.com/files/156196/SMB-DOUBLEPULSAR-Remote-Code-Execution.html",
            "https://nvd.nist.gov",
            "https://www.theregister.co.uk/2017/05/12/spain_ransomware_outbreak/",
            "https://www.exploit-db.com/exploits/42315/",
            "https://github.com/ShuBhamg0sain/All_top_500_hacking_tool"
        ]
    }
}

# result = json.loads(result)

def pfd(result, cve):
    sample_style_sheet = getSampleStyleSheet() # if you want to see all the sample styles, this prints them
    sample_style_sheet.list()

    my_doc = SimpleDocTemplate(f'{cve}.pdf')
    flowables = []
    my_doc.build(flowables)
    flowables.append(Paragraph(f"{cve}", sample_style_sheet['Heading1']))
    flowables.append(Paragraph(f"Date", sample_style_sheet['Heading2']))
    flowables.append(Paragraph(f'{result["mitre"]["date_created"][6:8]}.{result["mitre"]["date_created"][4:6]}.{result["mitre"]["date_created"][:4]}', sample_style_sheet['BodyText']))
    flowables.append(Paragraph(f"VECTOR", sample_style_sheet['Heading2']))
    flowables.append(Paragraph(f'{str(result["vulmon"]["overview"]).split("Vector: ")[-1] or result["nist"]["vector"]}',sample_style_sheet['BodyText']))
    flowables.append(Paragraph(f"COMPANY", sample_style_sheet['Heading2']))
    flowables.append(Paragraph(f'{result["mitre"]["assigning_cna"]}',sample_style_sheet['BodyText']))
    flowables.append(Paragraph(f"SCORE", sample_style_sheet['Heading2']))
    flowables.append(Paragraph(f'{result["vulmon"]["degree"] or result["nist"]["base_score"]}',sample_style_sheet['BodyText']))
    flowables.append(Paragraph(f"DESCRIPTION", sample_style_sheet['Heading2']))
    flowables.append(Paragraph(f'{result["nist"]["description"] or result["mitre"]["description"] or result["vulmon"]["description"]}',sample_style_sheet['BodyText']))

    flowables.append(Paragraph(f"REFERENCES", sample_style_sheet['Heading2']))
    data=[["SOURCE", "URL"]]
    mref = str(result["mitre"]["references"]).split("\n")
    URLS = []
    for i in mref:
        a = re.search("https?://.*", i)
        if a: 
            if is_valid_reference(str(a.group(0))):
                URLS.append(a.group(0))
    for i in URLS:
        if is_valid_reference(i):data.append(["mitre",i])
    for i in result["vulmon"]["references"]:
        if is_valid_reference(i):data.append(["vulmon",i])
    for i in result["nist"]["ref_list"]:
        if is_valid_reference(i["hyperlink"]): data.append(["nist",i["hyperlink"]])

    t=Table(data, style=[
                ("GRID", (0, 0), (-1, -1), 1, colors.black),
                ("BACKGROUND", (0, 0), (-1, 0), colors.grey),
                ("INNERGRID", (0, 0), (-1, -1), 0.25, colors.black),
                ("BOX", (0, 0), (-1, -1), 0.25, colors.black),
                ("TEXTCOLOR", (0, 0), (-1, -1), colors.black),
                ("FONTSIZE", (0, 0), (-1, -1), 9),
                ("VALIGN", (0, 0), (-1, -1), "MIDDLE"),
                ("ALIGN", (0, 0), (-1, -1), "LEFT"),
                ])
    Table(data, repeatRows=1)
    flowables.append(t)
    flowables.append(PageBreak())

    my_doc.build(flowables)

def is_valid_reference(url):
    try:
        response = requests.get(url)
        if response.status_code == 200 and "godaddy" not in response.raw:
            return True
        return False
    except:
        return False

pfd(result, "CVE-2017-0144")